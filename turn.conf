server {
  listen 443 ssl;
  listen [::]:443 ssl;

  ssl_certificate /home/ubuntu/turn-server-docker-image/turn_server_cert.pem;
  ssl_certificate_key /home/ubuntu/turn-server-docker-image/turn_server_pkey.pem;
  ssl_protocols TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/dhparam.pem;
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
  ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
  ssl_session_timeout 10m;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off; # Requires nginx >= 1.5.9
  ssl_stapling on; # Requires nginx >= 1.3.7
  ssl_stapling_verify on; # Requires nginx => 1.3.7
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;
  # Disable strict transport security for now. You can uncomment the following
  # line if you understand the implications.
  # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";

  server_name turnserver.aliancamedica.org;

  location / {

        set $upstream https://localhost:3478;
        # This can be HTTP or HTTPS on any port.
        # If anything other than localhost, HTTPS is recommended.
        proxy_pass $upstream;
        # You can optionally set these directives to keep from losing your original source IP in any logs on the backend server. Without them, the IP of the proxy will appear. You may need to pass through other headers as well depending on your situation.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

}